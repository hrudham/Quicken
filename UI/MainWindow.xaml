<Window x:Class="Quicken.UI.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        Title="Quicken" 
        Width="500" 
        Height="80"
        WindowStartupLocation="CenterScreen" 
        AllowsTransparency="True"
        WindowStyle="None" 
        Opacity="1.0" 
        ResizeMode="NoResize" 
        ShowInTaskbar="False" 
        Icon="quicken.ico" 
        BorderThickness="0" 
        Background="{x:Null}" 
        KeyDown="Window_KeyDown"
        KeyUp="Window_KeyUp"
        Loaded="Window_Loaded" 
        Deactivated="Window_Deactivated"
        FocusManager.FocusedElement="{Binding ElementName=SearchTextBox}">
    <Window.Resources>
        <PathGeometry x:Key="WaitGeometry">
            <PathGeometry.Figures>
                M512 0c-278.748 0-505.458 222.762-511.848 499.974 5.92-241.864 189.832-435.974 415.848-435.974 229.75 0 416 200.576 416 448 0 53.020 42.98 96 96 96 53.020 0 96-42.98 96-96 0-282.77-229.23-512-512-512zM512 1024c278.748 0 505.458-222.762 511.848-499.974-5.92 241.864-189.832 435.974-415.848 435.974-229.75 0-416-200.576-416-448 0-53.020-42.98-96-96-96-53.020 0-96 42.98-96 96 0 282.77 229.23 512 512 512z
            </PathGeometry.Figures>
        </PathGeometry>

        <Style x:Key="IconPath" TargetType="Path">
            <Setter Property="Fill" Value="#FFF" />
            <Setter Property="Stretch" Value="Uniform" />
            <Setter Property="VerticalAlignment" Value="Center" />
            <Setter Property="HorizontalAlignment" Value="Left" />
            <Setter Property="Height" Value="22" />
            <Setter Property="Width" Value="22" />
            <Setter Property="RenderTransformOrigin" Value="0.5,0.5"/>
            <Setter Property="RenderTransform">
                <Setter.Value>
                    <TransformGroup>
                        <RotateTransform />
                    </TransformGroup>
                </Setter.Value>
            </Setter>
        </Style>
        <Style x:Key="WaitPath" TargetType="Path" BasedOn="{StaticResource IconPath}">
            <Setter Property="Data" Value="{StaticResource WaitGeometry}" />
            <Style.Triggers>
                <EventTrigger RoutedEvent="Path.Loaded">
                    <BeginStoryboard>
                        <Storyboard TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[0].(RotateTransform.Angle)" RepeatBehavior="Forever">
                            <DoubleAnimation BeginTime="0:0:0" Duration="0:0:1" From="0" To="360" />
                        </Storyboard>
                    </BeginStoryboard>
                </EventTrigger>
            </Style.Triggers>
        </Style>
    </Window.Resources>
    
    <Grid Name="MainGrid" 
          HorizontalAlignment="Left"
          Width="500" 
          Height="80"
          VerticalAlignment="Center">
        <Grid.Background>
            <ImageBrush ImageSource="Images/skin.png" Stretch="Uniform"/>
        </Grid.Background>
        <TextBox HorizontalAlignment="Left" 
                 Height="48"
                 Width="127"
                 Text="{Binding Query, UpdateSourceTrigger=PropertyChanged}"
                 FontFamily="Verdana"
                 FontSize="14" 
                 Padding="8px 0px"
                 AllowDrop="False" 
                 x:Name="SearchTextBox" 
                 GotFocus="SearchTextBox_GotFocus" 
                 VerticalContentAlignment="Center" 
                 Background="{x:Null}" 
                 BorderBrush="{x:Null}" 
                 Foreground="#FFEEEEEE"
                 Grid.IsSharedSizeScope="True" 
                 BorderThickness="0"
                 IsManipulationEnabled="True" 
                 IsInactiveSelectionHighlightEnabled="True" 
                 VerticalAlignment="Center" 
                 CaretBrush="White" 
                 Margin="21,16,0,16">
            <TextBox.SelectionBrush>
                <SolidColorBrush Color="{DynamicResource {x:Static SystemColors.HighlightColorKey}}"/>
            </TextBox.SelectionBrush>
        </TextBox>
        <Grid Margin="148,15,19,15">
            <Image Name="TargetIconImage" 
                   HorizontalAlignment="Left" 
                   Height="32"
                   Width="32" Margin="5,0,0,0" />
            <Image Name="RunAsAdministratorImage"
                   HorizontalAlignment="Left" 
                   VerticalAlignment="Top"
                   Width="16"
                   Height="16" 
                   Source="Images/run-as-administrator.png" Margin="0,4,0,0">
                <Image.Style>
                    <Style TargetType="Image">
                        <Style.Triggers>
                            <DataTrigger Binding="{Binding IsRunAsAdministrator, FallbackValue=false}" Value="false">
                                <Setter Property="Visibility" Value="Collapsed" />
                            </DataTrigger>
                        </Style.Triggers>
                    </Style>
                </Image.Style>
            </Image>
            <StackPanel VerticalAlignment="Center" Margin="44,0,53,0" Width="236">
                <Label x:Name="TargetNameLabel"
                       HorizontalAlignment="Left" 
                       Width="236" 
                       Padding="2" 
                       FontFamily="Calibri" 
                       FontSize="16" 
                       VerticalContentAlignment="Center" 
                       Foreground="#FFEEEEEE">
                    <TextBlock TextTrimming="CharacterEllipsis" 
                               x:Name="TargetNameTextBlock" 
                               VerticalAlignment="Center"
                               Text="{Binding CurrentTarget.Name}" />
                </Label>
                <Label Name="TargetDescriptionLabel"
                       HorizontalAlignment="Left" 
                       VerticalAlignment="Top" 
                       Width="236" 
                       Padding="2" 
                       FontFamily="Calibri" 
                       VerticalContentAlignment="Center"
                       Foreground="#FFCCCCCC" 
                       Height="16">
                    <TextBlock TextTrimming="CharacterEllipsis"
                               Name="TargetDescriptionTextBlock" 
                               VerticalAlignment="Center" 
                               Text="{Binding CurrentTarget.Description}" />
                    <Label.Style>
                        <Style TargetType="Label">
                            <Style.Triggers>
                                <DataTrigger Binding="{Binding CurrentTarget.Description, FallbackValue={x:Null}}" Value="{x:Null}">
                                    <Setter Property="Visibility" Value="Collapsed" />
                                </DataTrigger>
                                <DataTrigger Binding="{Binding CurrentTarget.Description, FallbackValue={x:Null}}" Value="">
                                    <Setter Property="Visibility" Value="Collapsed" />
                                </DataTrigger>
                            </Style.Triggers>
                        </Style>
                    </Label.Style>
                </Label>
            </StackPanel>
            <Border Name="TargetTypeBorder"
                    BorderBrush="#444" 
                    BorderThickness="1" 
                    HorizontalAlignment="Left"
                    Height="36"
                    Margin="290,10,0,10" 
                    VerticalAlignment="Center" 
                    Width="1" />
            <Image x:Name="TargetTypeImage"
        	       HorizontalAlignment="Left" 
        	       Source="Images/target-desktop-application.png" 
                   Width="24"
                   Height="24" 
                   Margin="299,13,0,13">
                <Image.Style>
                    <Style TargetType="Image">
                        <Style.Triggers>
                            <DataTrigger Binding="{Binding IsUpdating, FallbackValue=false}" Value="true">
                                <Setter Property="Visibility" Value="Collapsed" />
                            </DataTrigger>
                        </Style.Triggers>
                    </Style>
                </Image.Style>
            </Image>
            <Grid.Style>
                <Style TargetType="Grid">
                    <Style.Triggers>
                        <DataTrigger Binding="{Binding CurrentTarget, FallbackValue={x:Null}}" Value="{x:Null}">
                            <Setter Property="Visibility" Value="Collapsed" />
                        </DataTrigger>
                    </Style.Triggers>
                </Style>
            </Grid.Style>
        </Grid>
        <Path Width="24" Height="24" Margin="448,0,0,0">
            <Path.Style>
                <Style TargetType="Path" BasedOn="{StaticResource WaitPath}">
                    <Style.Triggers>
                        <DataTrigger Binding="{Binding IsUpdating, FallbackValue=false}" Value="false">
                            <Setter Property="Visibility" Value="Collapsed" />
                        </DataTrigger>
                    </Style.Triggers>
                </Style>
            </Path.Style>
        </Path>
    </Grid>
</Window>
